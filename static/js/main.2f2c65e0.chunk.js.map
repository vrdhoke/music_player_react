{"version":3,"sources":["actions/actions.js","desktop/components/SongPanel.js","services/MusicService.js","desktop/components/PlaylistPanel.js","desktop/components/SeekSongPanel.js","desktop/containers/MainPage.js","mobile/components/BottomBar.js","mobile/components/TopSearchBar.js","mobile/containers/SearchView.js","mobile/containers/PlayingView.js","mobile/containers/PlaylistView.js","mobile/containers/MainPage.js","App.js","serviceWorker.js","reducers/reducers.js","store/index.js","index.js","others/NetEase_Music_logo.svg"],"names":["addSong","song","type","payload","setIndex","index","deleteSong","format","time","secs","ret","SongPanel","props","state","name","author","albumPicUrl","play","duration","currentTime","pSlider","curSongIndex","playMode","volume","songUrls","prevProps","prevState","this","songs","length","initializeSong","setState","currentIndex","setCurAndPlay","deletedIndex","audio","pause","src","mp3Url","e","setCurSong","Audio","onloadedmetadata","bind","onplay","setInterval","onended","shuffleIndex","getRandomSong","Math","floor","random","load","value","classes","className","root","Paper","paper","elevation","Typography","variant","Grid","container","direction","justify","alignItems","item","xs","color","Slider","aria-labelledby","onChange","event","seek","IconButton","aria-label","onClick","previous","playIcon","next","Checkbox","checked","icon","scIcon","checkedIcon","vSlider","changeVolume","CardMedia","cover","image","imageUrl","style","borderRadius","LinearProgress","height","width","React","Component","connect","reducer","dispatch","bindActionCreators","withRouter","withStyles","theme","flexGrow","top","bottom","position","padding","spacing","palette","text","secondary","card","display","details","flexDirection","content","flex","margin","controls","paddingLeft","paddingBottom","playSecControlFix","marginLeft","table","fontSize","th","tr","img","marginRight","MusicService","id","fetch","then","response","json","myInstance","PlaylistPanel","TableContainer","Table","stickyHeader","songTable","TableHead","TableRow","TableCell","TableBody","map","key","component","scope","size","backgroundColor","SeekSongPanel","results","result","curSearch","addSongAlert","handleSearchChange","songWillSend","firstAPICall","secondAPICall","Promise","all","values","finalVals","firstAPIResp","secondAPIResp","data","url","ar","al","picUrl","target","SERVICE","getInstance","searchSong","res","code","songCount","checkSong","success","constructSong","alert","NeteaseLogo","alt","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","inputProps","marginTop","Grow","in","transformOrigin","timeout","addSelectedSong","artists","Snackbar","background","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","message","Fragment","tableContainer","minWidth","shape","fade","common","black","breakpoints","up","pointerEvents","justifyContent","transition","transitions","create","MainPage","textAlign","title","paddingTop","useStyles","makeStyles","SimpleBottomNavigation","useState","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","label","menuButton","white","AppBar","Toolbar","edge","noWrap","SearchView","TopSearchBar","PlayingView","PlaylistView","App","exact","path","MainPageDesktop","MainPageMobile","Boolean","window","location","hostname","match","initialState","curMobileView","reducers","action","filter","slice","store","createStore","combineReducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2f2c65e0.chunk.js","sourcesContent":["export const addSong = (song) => (\n    {\n      type: 'ADD_SONG',\n      payload: song\n\n    }\n)\n\nexport const setIndex = (index) => (\n    {\n      type: 'SET_INDEX',\n      payload: index\n\n    }\n)\n\nexport const deleteSong = (index) => (\n    {\n      type: 'DELETE_SONG',\n      payload: index\n\n    }\n)\n\n\n","import React from 'react'\nimport {withRouter} from \"react-router\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {bindActionCreators} from \"redux\";\nimport {addSong, setIndex} from \"../../actions/actions\";\nimport {connect} from \"react-redux\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = theme => ({\n  root: {\n    flexGrow: 1,\n    top: 'auto',\n    bottom: 0,\n    position: 'fixed',\n    width: '100%',\n\n  },\n  paper: {\n\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    height: '15vh'\n  },\n  card: {\n    display: 'flex',\n    borderRadius: 0,\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 100,\n    height: 100,\n    margin: 'auto',\n\n  },\n  pSlider: {\n\n    width: 100\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 30,\n    width: 30,\n  },\n\n  vSlider: {\n    width: '80%',\n\n  },\n  scIcon: {},\n  playSecControlFix: {\n    marginLeft: theme.spacing(1)\n  },\n  table: {\n    width: '100%',\n    fontSize: 12\n  },\n  th: {\n    fontSize: 12\n  },\n  tr: {\n    fontSize: 12\n  },\n  img: {\n    width: 12,\n    height: 12,\n    marginRight: 20,\n    borderRadius: 5\n\n  }\n\n});\n\nfunction format(time) {\n  let mins = ~~((time % 3600) / 60);\n  let secs = ~~time % 60;\n  let ret = \"\";\n  ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n  ret += \"\" + secs;\n  return ret;\n}\n\nclass SongPanel extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      name: '',\n      author: '',\n      albumPicUrl: '',\n      play: false,\n      duration: \"--:--\",\n      currentTime: \"0:00\",\n      pSlider: 0,\n      curSongIndex: 0,\n      playMode: 0,\n      volume: 100,\n      songUrls: [],\n    }\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.songs.length !== prevProps.songs.length\n        && prevProps.songs.length == 0 && this.props.songs.length == 1) {\n      // initializing, only render once\n      this.initializeSong()\n      this.setState(\n          {play: false})\n      // this.setCurAndPlay()\n\n    } else if (this.props.currentIndex !== prevProps.currentIndex\n        && this.props.songs.length == prevProps.songs.length) {\n      // no song deleted but the currentIndex changed by user\n      this.setCurAndPlay()\n\n    } else if (this.props.songs.length < prevProps.songs.length) {\n      // songs length reduced, deleted 1/x song/songs\n      if (prevProps.currentIndex == this.props.deletedIndex) {\n        this.setCurAndPlay()\n      }\n    } else if (this.props.songs.length == 0) {\n      this.audio.pause()\n    }\n\n  }\n\n  setCurAndPlay() {\n    this.setState(\n        {play: true})\n    try {\n      this.audio.src = this.props.songs[this.props.currentIndex].mp3Url\n\n    } catch (e) {\n      //Uncaught (in promise) DOMException: The play() request was interrupted by a new load request.\n      //Didn't solve\n    }\n    this.setCurSong()\n  }\n\n  initializeSong() {\n\n    this.audio = new Audio(this.props.songs[0].mp3Url)\n    this.audio.onloadedmetadata = function () {\n      this.setState({\n        duration: format(this.audio.duration)\n      })\n\n    }.bind(this)\n\n    this.audio.onplay = () => {\n      setInterval(() => {\n        this.setState({\n          pSlider: (this.audio.currentTime / this.audio.duration) * 100,\n          currentTime: format(this.audio.currentTime)\n        })\n      }, 500)\n    }\n\n    this.audio.onended = () => {\n\n      switch (this.state.playMode) {\n        case 0:\n          if (this.props.currentIndex == this.props.songs.length - 1) {\n            this.props.setIndex(0)\n            this.audio.src = this.props.songs[0].mp3Url\n            this.setCurSong()\n          } else {\n            this.props.setIndex(this.props.currentIndex + 1)\n            this.audio.src = this.props.songs[this.props.currentIndex].mp3Url\n            this.setCurSong()\n\n          }\n          break;\n        case 1:\n          let shuffleIndex = this.getRandomSong()\n          while (shuffleIndex === this.props.currentIndex) {\n            shuffleIndex = this.getRandomSong()\n\n          }\n\n          this.props.setIndex(shuffleIndex)\n          this.audio.src = this.props.songs[shuffleIndex].mp3Url\n          this.setCurSong()\n          break;\n        case 2:\n          this.audio.play()\n          break;\n      }\n\n    }\n  }\n\n  getRandomSong() {\n    return Math.floor(Math.random() * Math.floor(this.props.songs.length))\n  }\n\n  setCurSong() {\n\n    this.audio.onloadedmetadata = function () {\n\n      this.setState({\n        duration: format(this.audio.duration)\n      })\n    }.bind(this)\n\n    this.audio.pause();\n    this.audio.load();\n    this.audio.play();\n\n  }\n\n  next() {\n\n    this.props.setIndex(this.props.currentIndex + 1)\n\n    switch (this.state.playMode) {\n      case 2:\n        if (this.props.currentIndex === this.props.songs.length - 1) {\n          this.props.setIndex(0)\n          this.audio.src = this.props.songs[0].mp3Url\n\n          this.setCurSong()\n        } else {\n          this.setState(\n              {play: true})\n          this.audio.src = this.props.songs[this.props.currentIndex + 1].mp3Url\n          this.setCurSong()\n\n        }\n        break;\n      case 1:\n        // avoid one song\n        let shuffleIndex = 0\n        if (this.props.songs.length > 1) {\n          shuffleIndex = this.getRandomSong()\n          while (shuffleIndex === this.props.currentIndex) {\n            shuffleIndex = this.getRandomSong()\n          }\n        }\n        this.props.setIndex(shuffleIndex)\n        this.setState({play: true})\n        this.audio.src = this.props.songs[shuffleIndex].mp3Url\n        this.setCurSong()\n\n        break;\n      case 0:\n        if (this.props.currentIndex === this.props.songs.length - 1) {\n          this.props.setIndex(0)\n          this.audio.src = this.props.songs[0].mp3Url\n\n          this.setCurSong()\n        } else {\n          this.setState(\n              {play: true})\n          this.audio.src = this.props.songs[this.props.currentIndex + 1].mp3Url\n          this.setCurSong()\n\n        }\n        break;\n    }\n\n  }\n\n  previous() {\n    switch (this.state.playMode) {\n\n      case 2:\n        if (this.props.currentIndex == 0) {\n          this.props.setIndex(this.props.songs.length - 1)\n          this.audio.src = this.props.songs[0].mp3Url\n          this.setCurSong()\n        } else {\n          this.setState(\n              {play: true})\n          this.props.setIndex(this.props.currentIndex - 1)\n          this.audio.src = this.props.songs[this.props.currentIndex - 1].mp3Url\n          this.setCurSong()\n\n        }\n        break;\n\n      case 1:\n        // avoid one song\n        let shuffleIndex = 0\n        if (this.props.songs.length > 1) {\n          shuffleIndex = this.getRandomSong()\n          while (shuffleIndex === this.props.currentIndex) {\n            shuffleIndex = this.getRandomSong()\n          }\n        }\n        this.props.setIndex(shuffleIndex)\n        this.setState({play: true})\n        this.audio.src = this.props.songs[shuffleIndex].mp3Url\n        this.setCurSong()\n\n        break;\n      case 0:\n        if (this.props.currentIndex == 0) {\n          this.props.setIndex(this.props.songs.length - 1)\n          try {\n            this.audio.src = this.props.songs[0].mp3Url\n\n          } catch (e) {\n            //Uncaught (in promise) DOMException: The play() request was interrupted by a new load request.\n            //Didn't solve\n          }\n          this.setCurSong()\n        } else {\n          this.setState(\n              {play: true})\n          this.props.setIndex(this.props.currentIndex - 1)\n          this.audio.src = this.props.songs[this.props.currentIndex - 1].mp3Url\n          this.setCurSong()\n\n        }\n        break;\n\n    }\n  }\n\n  changeVolume(value) {\n    this.setState({volume: value})\n    this.audio.volume = this.state.volume / 100\n  }\n\n  play() {\n    this.setState({play: true, duration: format(this.audio.duration)})\n    this.audio.play()\n\n  }\n\n  pause() {\n    this.setState({play: false})\n    this.audio.pause()\n  }\n\n  seek(value) {\n    try {\n      this.audio.currentTime = Math.floor(this.audio.duration * (value / 100))\n    } catch (e) {\n      // TypeError: Failed to set the 'currentTime' property on 'HTMLMediaElement': The provided double value is non-finite.\n      // Didn't solve\n    }\n  }\n\n  render() {\n\n    const {classes} = this.props;\n\n    return (\n\n        <div className={classes.root}>\n\n          <Paper className={classes.paper} elevation={10}>\n\n            {\n              this.props.songs.length == 0 ?\n\n                  <Typography variant={\"h2\"}>No song to play</Typography> :\n\n                  <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                  >\n\n\n                    <Grid item xs={2}>\n                      <Grid\n                          container\n                          direction=\"column\"\n                          justify=\"center\"\n                          alignItems=\"center\"\n                      >\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\">\n                            {this.props.songs[this.props.currentIndex].name}\n                          </Typography>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"caption\" color=\"textSecondary\">\n                            {this.props.songs[this.props.currentIndex].author}\n                          </Typography>\n\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Grid\n                          container\n                          direction=\"column\"\n                          justify=\"center\"\n                          alignItems=\"center\"\n                      >\n                        <Grid item xs={12}>\n                          <Slider value={this.state.pSlider}\n                                  aria-labelledby=\"continuous-slider\"\n                                  className={classes.pSlider}\n                                  onChange={(event, value) => this.seek(\n                                      value)}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography>\n                            {this.state.currentTime}/{this.state.duration}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <IconButton aria-label=\"previous\"\n                                  onClick={() => this.previous()}>\n                        <SkipPreviousIcon className={classes.playIcon}/>\n                      </IconButton>\n                      <IconButton aria-label=\"play/pause\" onClick={() => {\n                        this.state.play ? this.pause()\n                            : this.play()\n                      }}>\n                        {this.state.play ? <PauseIcon\n                                className={classes.playIcon}/> :\n                            <PlayArrowIcon className={classes.playIcon}/>}\n                      </IconButton>\n                      <IconButton aria-label=\"next\"\n                                  onClick={() => this.next()}\n                      >\n                        <SkipNextIcon className={classes.playIcon}\n                        />\n                      </IconButton>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Checkbox checked={this.state.playMode === 0 ? true\n                          : false} onChange={() => {\n                        this.setState({\n                          playMode: 0\n                        })\n                      }}\n                                icon={<PlaylistPlayIcon\n                                    className={classes.scIcon}/>}\n                                checkedIcon={<PlaylistPlayIcon\n                                    className={classes.scIcon}/>}\n                                value=\"checkedH\"/>\n                      <Checkbox icon={<ShuffleIcon className={classes.scIcon}/>}\n                                checkedIcon={<ShuffleIcon\n                                    className={classes.scIcon}/>}\n                                checked={this.state.playMode === 1 ? true\n                                    : false}\n                                onChange={() => {\n                                  this.setState(\n                                      {\n                                        playMode: 1\n                                      })\n                                }}/>\n                      <Checkbox icon={<LoopIcon className={classes.scIcon}/>}\n                                checkedIcon={<LoopIcon\n                                    className={classes.scIcon}/>}\n                                checked={this.state.playMode === 2 ? true\n                                    : false}\n                                onChange={() => {\n                                  this.setState({\n                                    playMode: 2\n                                  })\n                                }}/>\n                    </Grid>\n                    <Grid item xs={2}>\n\n                      <Grid\n                          container\n                          direction=\"row\"\n                          justify=\"center\"\n                          alignItems=\"center\"\n                      >\n                        <Grid item xs={4}>\n                          <IconButton aria-label=\"next\" onClick={() => {\n                            if (this.state.volume !== 0) {\n                              this.setState({volume: 0})\n                              this.audio.volume = 0\n                            } else {\n                              this.setState({volume: 100})\n                              this.audio.volume = 1\n                            }\n                          }}>\n                            {this.state.volume === 0 ? <VolumeOffIcon\n                                className={classes.scIcon}/> : <VolumeDownIcon\n                                className={classes.scIcon}/>}\n\n                          </IconButton>\n                        </Grid>\n\n                        <Grid item xs={8}>\n                          <Slider\n\n                              aria-labelledby=\"continuous-slider\"\n                              className={classes.vSlider}\n                              value={this.state.volume}\n                              onChange={(event, value) => this.changeVolume(\n                                  value)}\n                          />\n                        </Grid>\n\n                      </Grid>\n\n\n                    </Grid>\n                    <Grid item xs={2}>\n                      <CardMedia\n                          className={classes.cover}\n                          image={this.props.songs[this.props.currentIndex].imageUrl}\n                          style={{borderRadius: '5%'}}\n                      />\n                    </Grid>\n\n                  </Grid>\n            }\n\n\n          </Paper>\n\n          <LinearProgress variant=\"determinate\" value={this.state.pSlider}\n                          style={{height: 3, width: '100%'}}/>\n\n        </div>\n\n    )\n\n  }\n\n}\n\nconst mapStateToProps = (reducer) => {\n  return {\n    songs: reducer.state.songs,\n    currentIndex: reducer.state.currentIndex,\n    deletedIndex: reducer.state.deletedIndex\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({addSong, setIndex}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    withRouter((withStyles(useStyles)(SongPanel))))\n","export default class MusicService {\n  static myInstance = null;\n\n  static getInstance() {\n    if (MusicService.myInstance == null) {\n      MusicService.myInstance = new MusicService()\n    }\n    return this.myInstance\n  }\n\n  getASongUrl(id) {\n    return  fetch(\"https://neteasemusicapi.herokuapp.com/song/url?id=\" +id)\n    .then(response => response.json())\n  }\n\n  getASongDetail(id) {\n    return fetch(\"https://neteasemusicapi.herokuapp.com/song/detail?ids=\" + id)\n    .then(response => response.json())\n  }\n\n  checkSong(id) {\n    return fetch(\"https://neteasemusicapi.herokuapp.com/check/music?id=\" + id)\n    .then(response => response.json())\n  }\n\n  searchSong(text) {\n    return fetch(\"https://neteasemusicapi.herokuapp.com/search?keywords=\" + text)\n    .then(response => response.json())\n  }\n\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  // createUser(user) {\n  //   return fetch('https://game-webapp-server.herokuapp.com/users', {\n  //     method: 'POST',\n  //     body: JSON.stringify({\n  //       name: user.name,\n  //       birthday: user.birthday,\n  //       email: user.email,\n  //       password: user.password,\n  //       username: user.username,\n  //       gender: user.gender\n  //     }),\n  //     headers: {\n  //       'content-type': 'application/json'\n  //     }\n  //   })\n  // }\n  //\n  // findAllUsers() {\n  //   return fetch(\"https://game-webapp-server.herokuapp.com/users\")\n  //   .then(response => response.json())\n  // }\n  //\n  // findUserByUsn(usn) {\n  //   return fetch(\"https://game-webapp-server.herokuapp.com/login/\" + usn)\n  //   .then(response => response.json()\n  //   )\n  // }\n  //\n  // findUserById(uid) {\n  //   return fetch(\"https://game-webapp-server.herokuapp.com/users/\" + uid)\n  //   .then(response => response.json())\n  // }\n  //\n  // deleteGameForUser(userId, gameId) {\n  //\n  //   return fetch(\n  //       'https://game-webapp-server.herokuapp.com/users/' + userId + \"/games/\"\n  //       + gameId, {\n  //         method: 'DELETE',\n  //         headers: {\n  //           'content-type': 'application/json'\n  //         }\n  //\n  //       }).then(response => response.json())\n  //\n  //   updateProfile(userId, user)\n  //   {\n  //     return fetch(\n  //         'https://game-webapp-server.herokuapp.com/users/' + userId, {\n  //           method: 'PUT',\n  //           body: JSON.stringify(user),\n  //           headers: {\n  //             'content-type': 'application/json'\n  //           }\n  //         }).then(response => response.json())\n  //\n  //   }\n  //\n  //   deleteFriend(userId, friendId)\n  //   {\n  //     return fetch(\n  //         'https://game-webapp-server.herokuapp.com/users/' + userId\n  //         + \"/friends/\"\n  //         + friendId\n  //         , {\n  //           method: 'DELETE',\n  //           headers: {\n  //             'content-type': 'application/json'\n  //           }\n  //\n  //         }).then(response => response.json())\n  //\n  //   }\n  //\n  //   addFriend(userId, friend)\n  //   {\n  //     return fetch(\n  //         'https://game-webapp-server.herokuapp.com/users/' + userId\n  //         + \"/friends\",\n  //         {\n  //           method: 'POST',\n  //           body: JSON.stringify(friend),\n  //           headers: {\n  //             'content-type': 'application/json'\n  //           }\n  //         }).then(response => response.json())\n  //   }\n\n  // }\n\n}\n\n","import React from 'react'\nimport {withRouter} from \"react-router\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport PlayCircleFilledWhiteIcon\n  from '@material-ui/icons/PlayCircleFilledWhite';\nimport {connect} from 'react-redux';\nimport {useSelector} from 'react-redux'\nimport {deleteSong, setIndex} from \"../../actions/actions\";\nimport {bindActionCreators} from 'redux'\n\nconst useStyles = theme => ({\n  root: {},\n\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n  },\n  songTable: {},\n  container: {\n    height: '80vh',\n  },\n\n});\n\nclass PlaylistPanel extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {}\n\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n\n        <div className={classes.root}>\n\n          <Paper className={classes.paper} elevation={3}>\n            <TableContainer className={classes.container}>\n              <Table stickyHeader aria-label=\"sticky table\"\n                     className={classes.songTable}>\n                <TableHead>\n                  <TableRow>\n\n                    <TableCell>\n                      <Typography variant={'h5'}>\n                        Playlist\n                      </Typography>\n                    </TableCell>\n\n                    <TableCell>\n                      <Typography variant={'subtitle1'}>\n                        Name\n                      </Typography>\n                    </TableCell>\n\n                    <TableCell>\n                      <Typography variant={'subtitle1'}>\n                        Author\n                      </Typography>\n                    </TableCell>\n\n                    <TableCell>\n\n                    </TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.props.songs.length == 0 ? <Typography variant={\"h6\"}>No\n                        songs yet, try add some.</Typography>\n                      : this.props.songs.map(\n                          (song, index) => (\n                              <TableRow key={index}>\n\n                                <TableCell component=\"th\" scope=\"row\">\n                                  <IconButton size=\"small\" aria-label=\"play\"\n                                              style={{\n                                                backgroundColor: this.props.currentIndex\n                                                == index\n                                                    ? '#ADD8E6' : 'white'\n                                              }}\n                                              onClick={() => {\n                                                this.props.setIndex(index)\n                                              }}\n                                  >\n                                    <PlayCircleFilledWhiteIcon\n                                        style={{\"fontSize\": 20}}\n                                        className={classes.playIcon}/>\n                                  </IconButton>\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">\n                                  {song.name}\n                                </TableCell>\n\n                                <TableCell component=\"th\" scope=\"row\">\n                                  {song.author}\n                                </TableCell>\n\n                                <TableCell component=\"th\" scope=\"row\">\n                                  <IconButton size=\"small\" aria-label=\"play\"\n                                              onClick={() => {\n                                                this.props.deleteSong(index)\n                                              }}\n                                  >\n                                    <HighlightOffIcon\n                                        style={{\"fontSize\": 20}}\n                                        className={classes.playIcon}/>\n                                  </IconButton>\n                                </TableCell>\n\n                              </TableRow>\n                          ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n\n          </Paper>\n\n\n        </div>\n\n    )\n\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    songs: state.state.songs,\n    currentIndex: state.state.currentIndex,\n    deletedIndex: state.state.deletedIndex\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({setIndex, deleteSong}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    withRouter((withStyles(useStyles)(PlaylistPanel))))\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport {withRouter} from \"react-router\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SERVICE from \"../../services/MusicService\";\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from \"@material-ui/core/Button\";\nimport {bindActionCreators} from \"redux\";\nimport {addSong} from \"../../actions/actions\";\nimport {connect} from \"react-redux\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport NeteaseLogo from \"../../others/NetEase_Music_logo.svg\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from \"@material-ui/core/InputBase\";\nimport PlayCircleFilledWhiteIcon\n  from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Fade from \"@material-ui/core/Fade\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\nconst useStyles = theme => ({\n  root: {},\n  paper: {\n    height: '80vh',\n    padding: theme.spacing(2)\n  },\n  tableContainer: {\n    height: '80vh',\n    minWidth: '100%'\n\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  songTable: {},\n  container: {\n    height: '50vh',\n  },\n\n});\n\nclass SeekSongPanel extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      results: {\n        result: {\n          songs: []\n        }\n      },\n      curSearch: \"\",\n      addSongAlert: false\n    }\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n\n  }\n\n  componentDidMount() {\n\n  }\n\n  constructSong(id) {\n    let songWillSend = {\n      id: id,\n      name: \"null\",\n      author: \"null\",\n      imageUrl: \"null\",\n      mp3Url: \"null\"\n    }\n\n    let firstAPICall = fetch(\n        \"https://neteasemusicapi.herokuapp.com/song/url?id=\" + id);\n    let secondAPICall = fetch(\n        \"https://neteasemusicapi.herokuapp.com/song/detail?ids=\" + id);\n\n    Promise.all([firstAPICall, secondAPICall])\n    .then(values => Promise.all(values.map(value => value.json())))\n    .then(finalVals => {\n      let firstAPIResp = finalVals[0];\n      let secondAPIResp = finalVals[1];\n      songWillSend.id = id\n      songWillSend.mp3Url = firstAPIResp.data[0].url\n      songWillSend.name = secondAPIResp.songs[0].name\n      songWillSend.author = secondAPIResp.songs[0].ar[0].name\n      songWillSend.imageUrl = secondAPIResp.songs[0].al.picUrl\n      this.props.addSong({\n        id: id,\n        name: songWillSend.name = secondAPIResp.songs[0].name,\n        author: songWillSend.author = secondAPIResp.songs[0].ar[0].name,\n        imageUrl: songWillSend.imageUrl = secondAPIResp.songs[0].al.picUrl,\n        mp3Url: songWillSend.mp3Url = firstAPIResp.data[0].url\n\n      })\n    });\n\n  }\n\n  handleSearchChange(e) {\n    this.setState({\n      curSearch: e.target.value\n    })\n    SERVICE.getInstance().searchSong(this.state.curSearch).then(res => {\n      if (res.code == 400) {\n\n      } else if (res.result.songCount == 0) {\n      } else {\n        this.setState({\n          results: res\n        })\n      }\n    })\n  }\n\n  addSelectedSong(id) {\n    SERVICE.getInstance().checkSong(id).then(res => {\n      if (res.success) {\n        this.constructSong(\n            id)\n        this.setState({addSongAlert: true})\n      } else {\n        alert(\"No copyright | 没有版权\")\n      }\n    })\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n\n        <div className={classes.root}>\n\n\n          <Paper elevation={3} className={classes.paper}>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n              <Grid item>\n                <img src={NeteaseLogo} alt=\"website logo\"\n                     style={{width: 50, height: 50, margin: 8}}/>\n              </Grid>\n\n              <Grid item>\n                <Typography variant=\"caption\" color=\"textSecondary\">Powered By\n                  NeteaseCloudMusic</Typography>\n\n              </Grid>\n\n\n              <Grid item>\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon/>\n                  </div>\n                  <InputBase\n                      placeholder=\"Search…\"\n                      classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                      }}\n                      inputProps={{'aria-label': 'search'}}\n                      onChange={this.handleSearchChange}\n                  />\n                </div>\n\n              </Grid>\n\n              <Grid item style={{marginTop: 16}}>\n\n                {this.state.curSearch == \"\" ? <span></span> : <TableContainer\n                    className={classes.container}>\n                  <Table stickyHeader aria-label=\"sticky table\"\n                         className={classes.songTable}>\n                    <TableHead>\n                      <TableRow>\n\n                        <TableCell>\n\n                        </TableCell>\n\n                        <TableCell>\n                          <Typography variant={'subtitle1'}>\n                            Name\n                          </Typography>\n                        </TableCell>\n\n                        <TableCell>\n                          <Typography variant={'subtitle1'}>\n                            Author\n                          </Typography>\n                        </TableCell>\n\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {this.state.results.result.songs.length == 0 ?\n                          <span></span>\n                          : this.state.results.result.songs.map(\n                              (song, index) => (\n                                  <Grow in={true}\n                                        style={{transformOrigin: '0 0 0'}}\n                                        {...({timeout: 1000 + index * 50})}>\n\n                                    <TableRow key={index}>\n\n                                      <TableCell component=\"th\" scope=\"row\">\n                                        <IconButton size=\"small\"\n                                                    aria-label=\"play\"\n\n                                                    onClick={() => {\n                                                      this.addSelectedSong(\n                                                          song.id)\n                                                    }}\n                                        >\n                                          <AddCircleOutlineIcon\n                                              style={{\"fontSize\": 20}}\n                                              className={classes.playIcon}/>\n                                        </IconButton>\n                                      </TableCell>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                        {song.name}\n                                      </TableCell>\n\n                                      <TableCell component=\"th\" scope=\"row\">\n                                        {song.artists[0].name}\n                                      </TableCell>\n\n\n                                    </TableRow>\n                                  </Grow>\n                              ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>}\n\n              </Grid>\n\n\n            </Grid>\n          </Paper>\n\n          <div>\n            <Snackbar\n                background='red'\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                open={this.state.addSongAlert}\n                autoHideDuration={1000}\n                onClose={() => this.setState({addSongAlert: false})}\n            >\n\n              <SnackbarContent style={{\n                backgroundColor: 'green',\n              }}\n                               message={<span\n                                   id=\"client-snackbar\">    <React.Fragment>\n                                 <Grid\n                                     container\n                                     direction=\"row\"\n                                     justify=\"center\"\n                                     alignItems=\"center\"\n                                 >\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\"\n                                onClick={() => this.setState(\n                                    {addSongAlert: false})}>\n                      <CheckCircleOutlineIcon fontSize=\"small\"/>\n                    </IconButton>\n                                   <Typography>Song added</Typography></Grid>\n                  </React.Fragment></span>}\n              />\n\n            </Snackbar>\n          </div>\n\n\n        </div>\n\n    )\n\n  }\n\n}\n\nconst mapStateToProps = (reducer) => {\n  return {\n    songs: reducer.state.songs,\n    currentIndex: reducer.state.currentIndex,\n    deletedIndex: reducer.state.deletedIndex\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({addSong}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    withRouter((withStyles(useStyles)(SeekSongPanel))))\n\n\n\n\n","import React from 'react'\nimport {withRouter} from \"react-router\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport SongPanel from \"../components/SongPanel\";\nimport MusicService from \"../../services/MusicService\"\nimport PlaylistPanel from \"../components/PlaylistPanel\";\nimport {Typography} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nimport SeekSongPanel from \"../components/SeekSongPanel\";\n\nconst service = MusicService.getInstance()\nconst useStyles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    paddingBottom: '15%',\n    paddingTop: 20\n  }\n\n});\n\nclass MainPage extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      songs: [1431583891,30352891, 27491508, 35476044, 1409137437, 1386055783, 113115,\n        123456]\n    }\n\n  }\n\n\n\n  componentDidMount() {\n\n\n  }\n\n  render() {\n    const {classes} = this.props;\n    return (\n\n        <div className={classes.root}>\n\n\n         <Grid\n             container\n             direction=\"row\"\n             justify=\"center\"\n             alignItems=\"center\"\n         >\n           <Grid item xs={6}>\n             <SeekSongPanel/>\n           </Grid>\n           <Grid item xs={6}>\n             <PlaylistPanel/>\n           </Grid>\n\n\n\n\n\n  <SongPanel songs={this.state.songs}/>\n\n\n          </Grid>\n\n\n        </div>\n\n    )\n\n  }\n\n}\n\nexport default withRouter((withStyles(useStyles)(MainPage)))\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ListIcon from '@material-ui/icons/List';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    bottom:0,\n    position: 'fixed',\n\n  },\n});\n\nexport default function SimpleBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n      <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n      >\n        <BottomNavigationAction label=\"Search\" icon={<SearchIcon />} />\n        <BottomNavigationAction label=\"Playlist\" icon={<ListIcon />} />\n        <BottomNavigationAction label=\"Playing\" icon={<MusicNoteIcon />} />\n      </BottomNavigation>\n  );\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NeteaseLogo from \"../../others/NetEase_Music_logo.svg\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n\n  },\n}));\n\nfunction SearchAppBar({state}) {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n            >\n              <img src={NeteaseLogo} alt=\"website logo\"\n                   style={{width: 25, height: 25,}}/>\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Material-UI\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon/>\n              </div>\n              <InputBase\n                  placeholder=\"Search…\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  inputProps={{'aria-label': 'search'}}\n              />\n            </div>\n            <div></div>\n          </Toolbar>\n        </AppBar>\n      </div>\n  );\n}\n\nfunction mapStateToProps(reducer) {\n  return {state: reducer.state};\n}\n\nexport default connect(mapStateToProps)(SearchAppBar);\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ListIcon from '@material-ui/icons/List';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport TopSearchBar from \"../components/TopSearchBar\";\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    bottom:0,\n    position: 'fixed',\n\n  },\n});\n\nexport default function SearchView() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n      <div>\n        <TopSearchBar/>\n        <div>hello SearchView</div>\n      </div>\n\n\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ListIcon from '@material-ui/icons/List';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    bottom:0,\n    position: 'fixed',\n\n  },\n});\n\nexport default function PlayingView() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n      <div>hello playview</div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ListIcon from '@material-ui/icons/List';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    bottom:0,\n    position: 'fixed',\n\n  },\n});\n\nexport default function PlaylistView() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n      <div>hello playlistview</div>\n  );\n}\n","import React from 'react'\nimport {withRouter} from \"react-router\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MusicService from \"../../services/MusicService\"\nimport {Typography} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport BottomBar from \"../components/BottomBar\";\nimport TopSearchBar from \"../components/TopSearchBar\";\nimport SearchView from \"./SearchView\";\nimport PlayingView from \"./PlayingView\";\nimport PlaylistView from \"./PlaylistView\";\n\n\nconst service = MusicService.getInstance()\nconst useStyles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    paddingBottom: '15%',\n    paddingTop: 20\n  }\n\n});\n\nclass MainPage extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n\n    }\n\n  }\n\n\n\n  componentDidMount() {\n\n\n  }\n\n  render() {\n    const {classes} = this.props;\n    return (\n\n        <div className={classes.root}>\n<SearchView/>\n<PlayingView/>\n<PlaylistView/>\n<BottomBar/>\n\n\n        </div>\n\n    )\n\n  }\n\n}\n\nexport default withRouter((withStyles(useStyles)(MainPage)))\n\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom'\nimport MainPageDesktop from \"./desktop/containers/MainPage\";\nimport MainPageMobile from \"./mobile/containers/MainPage\";\nimport {Provider} from 'react-redux'\nimport {applyMiddleware, createStore} from \"redux\";\nfunction App() {\n  return (\n\n        <Router>\n          <Switch>\n            <Route exact path={\"/\"} component={ MainPageDesktop}></Route>\n            <Route exact path={\"/mobile\"} component={ MainPageMobile}></Route>\n          </Switch>\n        </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {\n  songs: [],\n  currentIndex: 0,\n  deletedIndex: -1,\n  curMobileView:0\n}\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_SONG':\n      return {\n        ...state,\n        songs: state.songs.filter(song => song.id == action.payload.id).length > 0\n            ? state.songs : [...state.songs, action.payload]\n\n      }\n    case 'SET_INDEX' :\n      return {\n        ...state,\n        currentIndex: action.payload\n      }\n    case 'DELETE_SONG':\n      return {\n        ...state,\n        songs: [\n          ...state.songs.slice(0, action.payload),\n          ...state.songs.slice(action.payload + 1)\n        ],\n        currentIndex: action.payload >= state.currentIndex && state.currentIndex\n        !== state.songs.length - 1 ? state.currentIndex : state.currentIndex\n        !== 0 ? state.currentIndex - 1 : state.currentIndex,\n        deletedIndex: action.payload\n\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducers\n","import {createStore,combineReducers} from \"redux\";\nimport reducers from '../reducers/reducers.js'\n\nexport const store = createStore(\n    combineReducers({\n      state:reducers\n    })\n)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport {store} from \"./store\";\n\n\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>\n\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/NetEase_Music_logo.cd993e2b.svg\";"],"sourceRoot":""}